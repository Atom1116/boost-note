{"_id":"note:3xwoee6SK","title":"React開発環境構築","content":"## React開発環境構築\n\n### はじめに\n\nここでは、Reactの開発環境の構築方法についてまとめる\n\n### 前提条件\n\nnode 12系\nnpm 6系\nmac catalina\n\n\n### 「HelloWorld」までの手順\n\n1. npm プロジェクトの作成\n\n任意のディレクトリ を作成し、npmプロジェクトを作成する\n```\n$npm init\n```\n\npackage.json が生成されるため下記の様に編集\n\n```\n{\n  \"name\": \"weather_call_app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Weather Call App\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"dev\": \"webpack --mode development --watch\",\n    \"build\": \"webpack --mode production\",\n    \"start\": \"webpack-dev-server\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \n  // 開発用プラグイン　以降でインストールしていく\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.12.3\",\n    \"@babel/preset-env\": \"^7.12.1\",\n    \"@babel/preset-react\": \"^7.12.5\",\n    \"babel-loader\": \"^8.2.1\",\n    \"react\": \"^17.0.1\",\n    \"react-dom\": \"^17.0.1\",\n    \"webpack\": \"^5.5.0\",\n    \"webpack-cli\": \"^3.2.1\"\n  },\n  \"dependencies\": {\n    \"webpack-dev-server\": \"^3.7.1\"\n  }\n}\n```\n\n2. webpackとReactのパッケージをインストール\n\nwebpack用のプラグインのインストール\n```\n$ npm install --save-dev webpack webpack-cli@3.2.1 // webpack-cliはweb-dev-serverを使用する場合3系を使う\n```\n\nbabelプラグインをインストール\n```\n$ npm install --save-dev --save-dev @babel/core @babel/preset-env babel-loader\n```\n\nreact用プラグインをインストール\n```\nnpm install --save-dev react react-dom @babel/preset-react\n```\n\n\n\n3. webpack.config.js を作成\n```\nconst path = require('path');\nconst webpack = require('webpack');\n\n// modeがdebugかを判定\nvar is_debug = process.env.NODE_ENV !== \"production\";\n\nmodule.exports = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'public'),\n        filename: 'index.bundle.js'\n    },\n    module: {\n        rules: [{\n            // Reactの設定\n            test: /\\.js[x]?$/,\n            exclude: /(node_modules|bower_components)/,\n            use: [{\n                loader: 'babel-loader',\n                options: {\n                    presets: ['@babel/preset-react', '@babel/preset-env']\n                }\n            }]\n        }]\n    },\n    devtool: is_debug ? 'source-map' : 'none',\n\n    // webpack-dev-serverの設定\n    devServer: {\n        inline: true,\n        contentBase: path.join(__dirname, 'public'),\n        watchContentBase: true\n    },\n\n    // プラグイン\n    plugins: is_debug ? [] : [\n        new webpack.optimize.OccurrenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin({\n            mangle: false,\n            sourcemap: false\n        }),\n    ],\n}\n\n```\n\n4. index.html、client.jsを作成\n- index.html\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>React Tutorials</title>\n    <!-- change this up! http://www.bootstrapcdn.com/bootswatch/ -->\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootswatch/3.3.6/cosmo/bootstrap.min.css\" type=\"text/css\" rel=\"stylesheet\"/>\n  </head>\n\n  <body>\n    <div id=\"app\"></div>\n    <script src=\"client.min.js\"></script>\n  </body>\n</html>\n```\n\n- client.js\n```\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Layout extends React.Component {\n  render() {\n    return (\n      <h1>Hello World!</h1>\n    );\n  }\n}\n\nconst app = document.getElementById('app');\nReactDOM.render(<Layout/>, app);\n```\n\n\n5. webpack コマンドでclient.min.js ファイルを作成し、index.html ファイルをChrome で開くと、「Hello World!」と表示される。\n\n```\nwebpack --mode development\n```\n\n\n### 開発用Webサーバーの起動\n\nwebpackの開発用サーバーを起動する\n\nまずモジュールをインストール(2020/10/20 なぜかBeta版のみ動く?)\n``` \nnpm install --save-dev @webpack-cli/serve@beta\n```\n","tags":[],"folderPathname":"/React","data":{},"createdAt":"2020-10-15T02:41:00.829Z","updatedAt":"2020-11-17T22:24:48.610Z","trashed":false,"_rev":"P33DmQl5w"}