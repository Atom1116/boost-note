{"_id":"note:bF4WynDYC","title":"React Routerを使ったSPA","content":"## React Routerを使ったSPA\n\n## はじめに\nここでは、React　Routerを使ったSPA（Single Page Apllication）の作成について記載していきます。\nReact Routerとは、UIとURLを同期させるライブラリで、コンポーネントをレンダリングする操作を簡単にできるようにします。\n\n\n## プロジェクトの作成手順\n\nWebpackを使ってプロジェクトを作成する。WebPackの基本的な使い方は省略する。\n\n1. npmパッケージの作成\n```\n$ npm install --save-dev @babel/core @babel/preset-env @babel/preset-react babel-loader \\\n        webpack webpack-cli webpack-dev-server \\\n        react react-dom \\\n        react-router react-router-dom\n```\n\n2. webpack.config.jsの作成\n\n- webpack.config.js\n```\nvar debug   = process.env.NODE_ENV !== \"production\";\nvar webpack = require('webpack');\nvar path    = require('path');\n\nmodule.exports = {\n  context: path.join(__dirname, \"src\"),\n  entry: \"./js/client.js\",\n  module: {\n    rules: [{\n      test: /\\.jsx?$/,\n      exclude: /(node_modules|bower_components)/,\n      use: [{\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-react', '@babel/preset-env']\n        }\n      }]\n    }]\n  },\n  output: {\n    path: __dirname + \"/src/\",\n    filename: \"client.min.js\",\n    publicPath: '/'\n  },\n  devServer: {\n    historyApiFallback: true\n  },\n  plugins: debug ? [] : [\n    new webpack.optimize.OccurrenceOrderPlugin(),\n    new webpack.optimize.UglifyJsPlugin({ mangle: false, sourcemap: false }),\n  ],\n};\n```","tags":[],"folderPathname":"/React","data":{},"createdAt":"2020-10-20T07:09:02.978Z","updatedAt":"2020-10-20T07:15:05.048Z","trashed":false,"_rev":"0LgTb1Ct2"}