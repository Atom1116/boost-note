{"_id":"note:j7yiUJTS7","title":"ソートアルゴリズム","content":"### ソートアルゴリズム（C++）\n\n```\n// バブルソート\nvoid bubleSort(int array[], int array_size) {\n    int i, j, tmp;\n    for(i = 0; i< (array_size -1); i++){\n        for(j = (array_size-1);i<j;j--){\n            if(array[j]<array[j - 1]) {\n                tmp = array[j];\n                array[j] = array[j-1];\n                array[j-1] = tmp;\n            }\n        }\n    }\n}\n\n\n// 選択ソート\nvoid sentakuSort(int array[], int array_size) {\n    int i, j, m, min;\n    \n    for(i = 0; i < array_size; i++) {\n        m = i;\n        // 最小値を検索\n        for(j = i + 1; j < array_size; j++) {\n            // if(array[j] > array[m]) { // ソートを降順へ\n            if(array[j] < array[m]) {\n                m = j;\n            }\n        }\n        \n        // 配列の位置を入れ替え\n        min = array[m];\n        array[m] = array[i];\n        array[i] = min;\n    }\n}\n\n// 挿入ソート\nvoid insertSort(int array[], array_size){\n    \n}\n```","tags":[],"folderPathname":"/競技プログラミング","data":{},"createdAt":"2021-05-10T10:28:33.436Z","updatedAt":"2021-05-10T10:35:12.958Z","trashed":false,"_rev":"jkWL8Ie4_"}