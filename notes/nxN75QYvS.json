{"_id":"note:nxN75QYvS","title":"Webpackローダーの使い方","content":"## Webpackローダーの使い方\n\n## ローダーとは\n- javascript以外のファイル（cssや画像）をバンドルできる様に変換するプログラム\n\n\n### 利用中のローダー一覧\n\n- babel-loader\n  - babelloaderはES2015（ES6）以降のコードをES5のコードに変換（トランスパイル）するローダー\n```\nnpm install --save-dev babel-loader @babel/core @babel/preset-env\n```\n\n- sassloader/cssloader/styleloader\n  - scss（css）ファイルをコンパイルするローダー\n```\nnpm install --save-dev sass-loader node-sass css-loader style-loader\n```\n\n- url-loader/file-loader\n  - 画像ファイルをバンドルするローダー\n  - データ量を考慮して、8kbのファイルはバンドルしてそれ以外はそのまま出力するようにする。\n```\nnpm install url-loader file-loader\n```\n\n### 一覧のローダーを用いたpackage.json\n```\n{\n  \"name\": \"sample-webpack-project\",\n  \"scripts\": {\n    \"build\": \"webpack\",\n    \"dev\": \"webpack --mode development --watch --hide-modules\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.11.4\",\n    \"@babel/preset-env\": \"^7.11.0\",\n    \"babel-loader\": \"^8.1.0\",\n    \"css-loader\": \"^4.2.2\",\n    \"node-sass\": \"^4.14.1\",\n    \"sass-loader\": \"^10.0.1\",\n    \"style-loader\": \"^1.2.1\",\n    \"webpack\": \"^4.44.1\",\n    \"webpack-cli\": \"^3.3.12\",\n    \"file-loader\": \"^6.0.0\",\n    \"url-loader\": \"^4.1.0\"\n  },\n  \"dependencies\": {\n    \"jquery\": \"^3.5.1\"\n  }\n}\n\n```\n\n\n### 一覧のローダーを用いたwebpack.config.js\n\n```\n// output.pathに絶対パスを指定する必要があるため、pathモジュールを読み込んでおく\nconst path = require('path');\n\nmodule.exports = {\n  watch:true,\n  // モードの設定、v4系以降はmodeを指定しないと、webpack実行時に警告が出る\n  mode: 'development',\n  // エントリーポイントの設定\n  entry: './src/js/app.js',\n  // 出力の設定\n  output: {\n    // 出力するファイル名\n    filename: 'bundle.js',\n    // 出力先のパス（絶対パスを指定する必要がある）\n    path: path.join(__dirname, 'public/js')\n  },\n  module: {\n    rules: [\n      // babel変換ローダー\n      {\n        // ローダーの処理ファイル\n        test:/\\.js$/,\n        include:path.resolve(__dirname, 'src/js'),\n        use:[{\n          // 利用するローダー\n          loader:\"babel-loader\",\n          // ローダーのオプション\n          options:{\n            presets: [\n              ['@babel/preset-env', {modules: false}]\n            ]}\n        }]\n      },\n\n      // css変換ローダー\n      {\n        test : /\\.css$/,\n        use : [\n          \"style-loader\",\n          \"css-loader\"\n        ]\n      },\n      // scss変換ローダー\n      {\n        test : /\\.scss$/,\n        // sass-loader,css-loader,style-loaderの順番で実行される\n        use : [\n          \"style-loader\",\n          \"css-loader\",\n          \"sass-loader\"\n        ]\n      },\n      {\n        test: /\\.(jpeg|png|gif|svg|ico|jpg)$/i,\n        loader:\"url-loader\",\n        include:path.resolve(__dirname, 'src/images'),\n        options:{\n          limit:8192,\n          // 出力するDataURLに変換しなかった画像の名前\n          // [バンドル前のファイル名].[ファイルの拡張子]\n          name:'[name].[ext]',\n          // デフォルトではoutput.pathに指定したパスに出力される\n          // 今回は、public/imagesに出力させたい\n          outputPath:'../images/',\n          // 出力させるファイルからの画像読み込み先\n          // 今夏はpublic/index.htmlからpublic/imagesの画像をお読み込みたいため、以下の指定になる\n          publicPath:path => './images/' + path\n        }\n      }\n    ]\n  }\n};\n\n```","tags":[],"folderPathname":"/WebPack","data":{},"createdAt":"2020-10-15T02:42:11.600Z","updatedAt":"2020-10-20T05:17:11.414Z","trashed":false,"_rev":"DCxyEC6TP"}