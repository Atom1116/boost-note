{"_id":"note:XFseovBNV","title":"atCoder　復習リスト","content":"# atCoder　復習リスト\n\natCoderで取り組んだ問題の中で、復習するべき問題をメモする。\n\n## atCoder Programes Training\n- [B - Choose Integers](https://atcoder.jp/contests/abc060/tasks/abc060_b) よくわからなかった\n- [C - Colorful Leaderboard](https://atcoder.jp/contests/abc064/tasks/abc064_c) 得点圏内の数を格納する」配列をあらかじめ用意してカウントアップし数を数える。\n- [C - Traveling](https://atcoder.jp/contests/abc086/tasks/arc089_a) むずい\n- [B - Minesweeper](https://atcoder.jp/contests/abc075/tasks/abc075_b) 変数dx,dyを用意し、それぞれdx=[-1,0,1], dy=[-1,0,1]とする\n- [B - Cut and Count](https://atcoder.jp/contests/abc098/tasks/abc098_b) 英数字を-'a'すると数値がわかるのでそれを配列にいれるパターン。set(ユニーク)を使う方がスマートかも\n- [B - Checkpoints](https://atcoder.jp/contests/abc057/tasks/abc057_b) 問題文の読み取りに手間取った。問題は単純\n- [B - Grid Compression](https://atcoder.jp/contests/abc107/tasks/abc107_b) 最初に列の削除を計算。行の判定とともに配列のW-1番目で出力するとよき。（別解）Hはswap、Wはsubstr(0, x)+substr(x+1)で消せる\n- [B - KEYENCE String](https://atcoder.jp/contests/keyence2019/tasks/keyence2019_b) 数値が100までならn^3も平気なので全探索。forを3ループさせて、切り取る範囲を探索する。\n- [C - Together](https://atcoder.jp/contests/abc072/tasks/arc082_a) x-1,x,x+1の数をすべて全探索。全探索する時、10*10^5の配列を用意し、カウントアップする。\n\n## 全探索\n- [B - 81](https://atcoder.jp/contests/abc144/tasks/abc144_b)\n- [B - Count ABC](https://atcoder.jp/contests/abc150/tasks/abc150_b)\n- [B - ATCode](https://atcoder.jp/contests/abc122/tasks/abc122_b)\n- [B - Uneven Numbers](https://atcoder.jp/contests/abc136/tasks/abc136_b)\n- [B - 105](https://atcoder.jp/contests/abc106/tasks/abc106_b)\n- [B - K-th Common Divisor](https://atcoder.jp/contests/abc120/tasks/abc120_b)\n- [C - Digits in Multiplication](https://atcoder.jp/contests/abc057/tasks/abc057_c)\n- [C - Half and Half](https://atcoder.jp/contests/abc095/tasks/arc096_a)\n- [D - Lucky PIN](https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_d)\n\n## ビット全探索\n- [C - Switches](https://atcoder.jp/contests/abc128/tasks/abc128_c)\n- [C - HonestOrUnkind2](https://atcoder.jp/contests/abc147/tasks/abc147_c)\n\n\n## 再帰\n- [C - Tour](https://atcoder.jp/contests/abc204/tasks/abc204_c) BFS(幅優先探索)をつかうらしい\n","tags":[],"folderPathname":"/競技プログラミング","data":{},"createdAt":"2021-06-11T13:05:18.096Z","updatedAt":"2021-11-21T01:10:28.020Z","trashed":false,"_rev":"xCJPvtST9"}