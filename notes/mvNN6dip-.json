{"_id":"note:mvNN6dip-","title":"WebpackとBabelの使い方を改めて学習 2020/11","content":"## Webpackの使い方を改めて学習\n\n\nwebpackを使用する上で改めてリファレンスを読み、使い方を学習した。\n学習内容をまとめる。\n\n\n### Webpackの役割\nwebpackは指定されたファイルを起点として、そこからimport文を頼りに芋づる式にファイルを繋げてゆき、一つにまとめたJavaScriptファイルを出力します。\nこのまとめる処理はバンドル(bundle)と呼ばれています。（束ねるの意）そしてバンドルを行うツールはバンドラーと呼ばれています。\nポイントは、“基本機能はあくまで一つのJavaScriptファイルにまとめる”というところです。\n\n\n### Babelとは\nJavaScriptのコンパイラです。トランスパイラとも呼ばれています。公式サイトはcompilerと呼んでいます。\n主に、es2015以降の新しい構文をes5の構文に変換するのに利用されています。もちろん、設定によってはes2018→es2015といった記述方法も可能です。その他にも、ReactのJSXやTypeScriptの変換にも使われます。\n\n\n\n### Webpackのはじめかた\n下記のコマンドよりWebpackを使うためのプラグインをインストールする。\n\n```\n$ npm install --save-dev webpack webpack-cli\n```\n\n\n### Babelのインストール\nWebpackでBabelのコンパイル環境を構築するために以下のコマンドよりプラグインをインストールする。\n```\n$ npm install --save-dev @babel/core @babel/cli @babel/preset-env\n```","tags":[],"folderPathname":"/WebPack","data":{},"createdAt":"2020-11-17T13:32:01.236Z","updatedAt":"2020-11-17T13:55:57.807Z","trashed":false,"_rev":"KNs0qC2Qe"}