{"_id":"note:4PiEHigcb","title":"iOSFrameworkプロジェクトをバインドライブラリ変換し、Xamarin.iOSで利用する手順","content":"\n## iOSFrameworkプロジェクトをバインドライブラリ変換し、Xamarin.iOSで利用する手順\n\n### 1.前提\n- VidualStudio 8.7.8\n- Xcode 12.01\n- [Objective Shape](https://docs.microsoft.com/ja-jp/xamarin/cross-platform/macios/binding/objective-sharpie/?context=xamarin/ios)が使用可能なこと\n\n### 2. 用語説明\n- iOSFrameworkプロジェクト\n\t- Xcodeで作成可能なフレームワーク作成のためのプロジェクト\n- バインドライブラリ\n\t- 外部のネイティブライブラリをXamarinで利用可能にするための形式\n\t- VidualStudioからバインドライブラリのプロジェクトを作成し、ビルドすることによって変換可能\n\t- iOSからバインドライブラリ への変換には、クラス・メソッドのインターフェースとしてヘッダーファイル（拡張子.h）が必要\n\n### 3.手順の目的\n- XamarinアプリでiOS(Swift)ライブラリを使用したいがヘッダーファイルがない場合、iOSライブラリをラップしたiOSFrameworkライブラリを作成する\n- 作成したiOSFrameworkプロジェクトをバインドライブラリ へ変換する\n- バインドライブラリをXamarin.iOSで利用できるようになる\n\n\n### 4.手順\n\n#### 4.1 iOSFrameworkプロジェクトの作成\n1. Xcodeを開き、新規作成から「Framework」を作成する。\n2. メインフォルダへSwidtファイルを新規作成（Ekyclibrary.swift）し、処理を実装する\n3. サンプルコードのフォルダ階層は以下の通り\n\t- プロジェクト名：EkycLibraryTextProxy\n\t- ![](2020-11-12-10-51-20-khe6fn1m.png)\n\n#### 4.2 外部ライブラリをiOSFrameworkプロジェクトで参照する\n\n\n#### 4.3 iOSFrameworkプロジェクトをバインドライブラリへ変換\n1. 以下のコマンドより、プロジェクトをビルドし、プロジェクトへ「build」フォルダができたことを確認\n\n```\n$ xcodebuild -sdk {ビルドターゲット※(例：iphoneos14.0)} -project \"{プロジェクト名.xcodeprojまでのパス}\" -configuration Release\n```\n\n※ターゲットを調べるコマンド\n```\n$ xcodebuild -showsdks\n```\n\n2. 以下のコマンドより、メタデータの作成をする。\n\n```\n$ sharpie bind --sdk=iphoneos14.0 --output=\"/EkycLibraryTestProxy/build/Release-iphoneos/EkycLibraryTestProxy.framework/Headers/\" --namespace=\"Binding\" --scope=\"/EkycLibraryTestProxy/build/Release-iphoneos/EkycLibraryTestProxy.framework/Headers/\" \"/EkycLibraryTestProxy/build/Release-iphoneos/EkycLibraryTestProxy.framework/Headers/EkycLibraryTestProxy-Swift.h\"\n```\n\n3. 2によりHeadersフォルダへ「ApiDefinitions.cs」ファイルが生成されたことを確認\n\n\n\n#### 4.4 バインドライブラリの作成とiOSFrameworkプロジェクトの参照手順\n1. VisualStduioを開き、新しいソリューション > iOS > バインディングライブラリを選択し、プロジェクトを作成する。\n\t- ライブラリ名：ItrustEkycBindingLibrary\n\t- フォルダ構造：![](2020-11-12-11-22-36-khe7jehe.png)\n\n2. ネイティブ参照>ネイティブ参照の追加を選択し、4.2でビルドした「EkycLibraryTestProxy.framework」を追加する\n\n3. 「ApiDefinition.cs」と4.3で作成した「ApiDefinitions.cs」のコードを全て入れ替える\n\n4. プロジェクトをビルドする\n\n5. ItrustEkycBindingLibrary.dllが生成されたことを確認\n\n\n#### 4.5 Xamarin.iOSでバインドライブラリ を使用する手順\n\n1. VidualStudoを開き、バインドライブラリ を使用するXamarinアプリのプロジェクトを立ち上げる（ここでは基本的なアプリ実装方法については触れない）\n\n2. Xamarin.iOS>参照より「参照を追加」を選択\n\n3. 参照ダイアログが展開され、.Netアセンブリタブの参照を開き、4.4で生成した「ItrustEkycBindingLibrary.dll」を選択し追加する\n\n4. プロジェクトで追加した ItrustEkycBindingLibraryのソースを呼び出し使用する。\n\n\n\n### 5.参照\n[チュートリアル: iOS Swift ライブラリをバインドする](https://docs.microsoft.com/ja-jp/xamarin/ios/platform/binding-swift/walkthrough)","tags":[],"folderPathname":"/Xamarin","data":{},"createdAt":"2020-11-12T01:35:28.042Z","updatedAt":"2020-11-12T02:52:29.650Z","trashed":false,"_rev":"49FSfUDgY"}